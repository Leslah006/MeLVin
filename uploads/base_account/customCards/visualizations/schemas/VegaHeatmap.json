{"title":"VegaHeatmap","description":"VegaHeatmap","className":"VegaHeatmap","allowOutConn":true,"allowInConn":true,"outConnections":[{"type":"OPTION_CONNECTION","name":"Option","desc":"List of options","disabled":true,"index":0}],"inConnections":[{"type":"OPTION_CONNECTION","unique":true,"name":"Option","desc":"List of options","disabled":true,"index":0},{"type":"DATA_CONNECTION","unique":true,"index":0,"name":"Tabular data"},{"type":"COLOR_CONNECTION","unique":true,"name":"Data groups","index":0}],"shareSelection":false,"shareData":true,"category":"viz","selectedLibs":["vega-embed.min.js","vega.min.js","vega-lite.min.js"],"previewDataFile":"","selectedPreview":"heatmap.svg","methods":{"init":{"code":"console.log(\"VegaHeatmap\");\n$(container).html(\"\");\n\nvar attributes = input.data.schema.attributes;\nvar columns = [];\nstate.options[1].value.forEach(function(value) {\n  columns.push(value);\n});\n\nvar hCol = state.options[0].value;\nvar hColIndex = Object.keys(attributes).indexOf(hCol);\nvar columnsIndex = columns.map(function(columnName) {\n  return Object.keys(attributes).indexOf(columnName);\n});\n\nvar values = [];\n\ninput.data.data.forEach(function(data) {\n  if (input.groups && input.groups.dataMemb && input.groups.dataMemb[data[0]]) {\n    columnsIndex.forEach(function(index, i) {\n      values.push({\n        rownames: data[hColIndex],\n        colname: columns[i],\n        value: data[index]\n      })\n    })\n  }\n});\n\nvar options = {\n  \"renderer\": \"svg\"\n};\n\nvar spec = {\n  \"$schema\": \"https://vega.github.io/schema/vega-lite/v2.json\",\n\n  \"data\": {\n    \"values\": values\n  },\n  \"width\": container.clientWidth,\n  \"height\": container.clientHeight,\n  \"mark\": \"rect\",\n  \"encoding\": {\n    \"y\": {\n      \"field\": \"rownames\",\n      \"type\": \"nominal\"\n    },\n    \"x\": {\n      \"field\": \"colname\",\n      \"type\": \"nominal\",\n      \"axis\": false\n    },\n    \"color\": {\n      \"field\": \"value\",\n      \"type\": \"quantitative\",\n      \"legend\": {\n        \"gradientLength\": container.clientHeight * 0.95\n      }\n    },\n    \"tooltip\": [{\n        \"field\": \"rownames\",\n        \"type\": \"nominal\"\n      },\n      {\n        \"field\": \"colname\",\n        \"type\": \"nominal\"\n      },\n      {\n        \"field\": \"value\",\n        \"type\": \"quantitative\"\n      }\n    ]\n  },\n  \"config\": {\n    \"scale\": {\n      \"bandPaddingInner\": 0,\n      \"bandPaddingOuter\": 0\n    },\n    \"text\": {\n      \"baseline\": \"middle\"\n    }\n  }\n};\nvegaEmbed(container, spec, options).then(function(result) {}).catch(console.error);\n\n$(container).children('div').remove();\nvar svg = $(container).children('svg');\nvar newHeight = container.clientHeight - (svg.height() - container.clientHeight);\nvar newWidth = container.clientWidth - (svg.width() - container.clientWidth);\n\nspec.width = newWidth;\nspec.height = newHeight;\n$(container).empty();\nvegaEmbed(container, spec, options).then(function(result) {}).catch(console.error);\nvar legend = $(container).find('g.mark-rect.role-legend-gradient path');\nlegend.css('fill', legend.css('fill').replace('##', '#'));","args":"container, input, state, dataHandler, setProperty","isRemovable":false,"hasCustomArgs":false,"canBeRenamed":false},"update":{"code":"this.init(container, input, state, dataHandler, setProperty);","args":"container, input, state, dataHandler, setProperty","isRemovable":false,"hasCustomArgs":false,"canBeRenamed":false}},"options":[{"type":"INPUT","label":"Main data column name","placeholder":"Column name"},{"type":"INPUT_LIST","label":"Heatmap columns","help":"Column name"}],"thumbnail":"./auth/previews/heatmap.svg","preview":"heatmap.svg","id":"VegaHeatmap","loadPreview":true,"hasOptions":true}